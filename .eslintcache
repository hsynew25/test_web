[{"/Users/hongsungyeun/Documents/gitlab/test_web/src/index.js":"1","/Users/hongsungyeun/Documents/gitlab/test_web/src/App.js":"2","/Users/hongsungyeun/Documents/gitlab/test_web/src/Components/router.js":"3","/Users/hongsungyeun/Documents/gitlab/test_web/src/Pages/home.js":"4","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/router.js":"5","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/home.js":"6","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/header.js":"7","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/globalStyles.js":"8","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/card.js":"9","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/profileAfterLogin.js":"10","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/login.js":"11","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/signUp.js":"12","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/inputSns.js":"13","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/emailDomain/selectDomain.js":"14","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/emailDomain/directDomain.js":"15","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myPage.js":"16","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/profileCard.js":"17","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/myProfileTab.js":"18","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/squareImg.js":"19","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/mySetting/mySetting.js":"20","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myProfile/myProfile.js":"21","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myProfile/viewMyLikes.js":"22","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myProfile/viewMyUploads.js":"23","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/mySetting/settingProfile.js":"24","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/mySetting/changePassword.js":"25","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/contentDetail.js":"26","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/slider/sliders.js":"27","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/slider/slideItem.js":"28","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/upload.js":"29","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/uploadedItem.js":"30","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/uploadInput.js":"31","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/imgCrop/cropDialog.js":"32","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/imgCrop/imgCropper.js":"33","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/imgCrop/cropImg.js":"34","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/comment/writingComment.js":"35","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/comment/commentItem.js":"36","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/comment/commentList.js":"37","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/loader.js":"38","/Users/hongsungyeun/Documents/gitlab/test_web/src/api.js":"39","/Users/hongsungyeun/Documents/gitlab/test_web/src/hooks/useGetMyProfile.js":"40","/Users/hongsungyeun/Documents/gitlab/test_web/src/hooks/useGetToken.js":"41","/Users/hongsungyeun/Documents/gitlab/test_web/src/hooks/useLogin.js":"42"},{"size":197,"mtime":1609177574982,"results":"43","hashOfConfig":"44"},{"size":331,"mtime":1609861344943,"results":"45","hashOfConfig":"44"},{"size":343,"mtime":1609175502456,"results":"46","hashOfConfig":"44"},{"size":96,"mtime":1609175160442,"results":"47","hashOfConfig":"44"},{"size":819,"mtime":1609861345088,"results":"48","hashOfConfig":"44"},{"size":1066,"mtime":1609861345089,"results":"49","hashOfConfig":"44"},{"size":2010,"mtime":1609861345089,"results":"50","hashOfConfig":"44"},{"size":586,"mtime":1609229368222,"results":"51","hashOfConfig":"44"},{"size":2448,"mtime":1609354063960,"results":"52","hashOfConfig":"44"},{"size":2386,"mtime":1609861345089,"results":"53","hashOfConfig":"44"},{"size":2935,"mtime":1609861345089,"results":"54","hashOfConfig":"44"},{"size":4070,"mtime":1609861345090,"results":"55","hashOfConfig":"44"},{"size":844,"mtime":1609861345028,"results":"56","hashOfConfig":"44"},{"size":1261,"mtime":1609861345029,"results":"57","hashOfConfig":"44"},{"size":954,"mtime":1609861345028,"results":"58","hashOfConfig":"44"},{"size":1799,"mtime":1609861345029,"results":"59","hashOfConfig":"44"},{"size":2605,"mtime":1609861345089,"results":"60","hashOfConfig":"44"},{"size":1352,"mtime":1609861345028,"results":"61","hashOfConfig":"44"},{"size":777,"mtime":1609340452526,"results":"62","hashOfConfig":"44"},{"size":1289,"mtime":1609861345030,"results":"63","hashOfConfig":"44"},{"size":406,"mtime":1609861345030,"results":"64","hashOfConfig":"44"},{"size":545,"mtime":1609341266390,"results":"65","hashOfConfig":"44"},{"size":489,"mtime":1609341265804,"results":"66","hashOfConfig":"44"},{"size":6961,"mtime":1609861345030,"results":"67","hashOfConfig":"44"},{"size":1800,"mtime":1609344169329,"results":"68","hashOfConfig":"44"},{"size":4210,"mtime":1609861345089,"results":"69","hashOfConfig":"44"},{"size":1360,"mtime":1609663123434,"results":"70","hashOfConfig":"44"},{"size":348,"mtime":1609356312747,"results":"71","hashOfConfig":"44"},{"size":3194,"mtime":1609861345090,"results":"72","hashOfConfig":"44"},{"size":591,"mtime":1609611937508,"results":"73","hashOfConfig":"44"},{"size":1863,"mtime":1609611629670,"results":"74","hashOfConfig":"44"},{"size":3486,"mtime":1609612246073,"results":"75","hashOfConfig":"44"},{"size":592,"mtime":1609610719964,"results":"76","hashOfConfig":"44"},{"size":2454,"mtime":1609609146643,"results":"77","hashOfConfig":"44"},{"size":1113,"mtime":1609751960541,"results":"78","hashOfConfig":"44"},{"size":1861,"mtime":1609750120606,"results":"79","hashOfConfig":"44"},{"size":200,"mtime":1609671832000,"results":"80","hashOfConfig":"44"},{"size":1335,"mtime":1609782576383,"results":"81","hashOfConfig":"44"},{"size":1050,"mtime":1609753168723,"results":"82","hashOfConfig":"44"},{"size":494,"mtime":1609861344996,"results":"83","hashOfConfig":"44"},{"size":182,"mtime":1609861344995,"results":"84","hashOfConfig":"44"},{"size":584,"mtime":1609861345088,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"dhfapd",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},"/Users/hongsungyeun/Documents/gitlab/test_web/src/index.js",[],["182","183"],"/Users/hongsungyeun/Documents/gitlab/test_web/src/App.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/Components/router.js",["184"],"/Users/hongsungyeun/Documents/gitlab/test_web/src/Pages/home.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/router.js",["185"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport ContentDetail from \"../pages/contentDetail\";\nimport Home from \"../pages/home\";\nimport Login from \"../pages/login\";\nimport MyPage from \"../pages/myPage/myPage\";\nimport SignUp from \"../pages/signUp\";\nimport Upload from \"../pages/upload\";\n\nexport default () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/mypage\" component={MyPage} />\n        <Route path=\"/contents\" component={ContentDetail} />\n        <Route path=\"/upload\" component={Upload} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/home.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/header.js",["186","187","188"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logo from \"../img/logo.png\";\nimport { useGetMyProfile } from \"../hooks/useGetMyProfile\";\nimport { useGetToken } from \"../hooks/useGetToken\";\nimport { useLogin } from \"../hooks/useLogin\";\nimport ProfileAfterLogin from \"./profileAfterLogin\";\n\nconst Container = styled.div`\n  padding: 12px 10px;\n  border-bottom: 1px solid #d0d0d0;\n\n  @media screen and (min-width: 768px) {\n    padding: 15px 40px;\n    box-shadow: 0 5px 5px #d0d0d0;\n    border-bottom: 0;\n  }\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 944px;\n  margin: 0 auto;\n`;\n\nconst Logo = styled.div`\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 30px;\n\n  &::before {\n    content: \"\";\n    display: inline-block;\n    background: url(${logo}) no-repeat 0 0 /30px 30px;\n    width: 30px;\n    height: 30px;\n    vertical-align: bottom;\n    margin-right: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 40px;\n\n    &::before {\n      background: url(${logo}) no-repeat 0 0 /40px 40px;\n      width: 40px;\n      height: 40px;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 0 10px;\n  height: 30px;\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 40px;\n    border-radius: 20px;\n    background-color: #fff;\n\n    &:hover {\n      background-color: #77c4a3;\n      color: #fff;\n    }\n  }\n`;\n\nconst SLink = styled(Link)`\n  display: inline-block;\n  vertical-align: top;\n`;\n\nconst Header = ({ isLogin, nickname, profileImg }) => {\n  return (\n    <Container>\n      <Wrap>\n        <SLink to=\"/\">\n          <Logo>Desk Holic</Logo>\n        </SLink>\n        {isLogin ? (\n          <ProfileAfterLogin nickname={nickname} profileImg={profileImg} />\n        ) : (\n          <SLink to=\"/login\">\n            <Button>LOGIN</Button>\n          </SLink>\n        )}\n      </Wrap>\n    </Container>\n  );\n};\n\nexport default Header;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/globalStyles.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/card.js",["189"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport sampleDesk from \"../img/sample_desk.jpeg\";\nimport sampleDesk2 from \"../img/sample_desk2.jpeg\";\nimport basicProfile from \"../img/basic_profile.png\";\nimport emptyHeart from \"../img/empty_heart.png\";\nimport fillHeart from \"../img/fill_heart.png\";\nimport commentImg from \"../img/comment.png\";\n\nconst Container = styled.div`\n  background-color: #ffffff;\n  margin-top: 15px;\n  box-shadow: 0 0 6px 2px #d0d0d0;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: 225px;\n    margin: 10px 4px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    flex-basis: 228px;\n  }\n`;\n\nconst ImgWrap = styled.div`\n  position: relative;\n  overflow: hidden;\n  &:before {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-height: 100%;\n  padding: 10px;\n`;\n\nconst CardInfo = styled.div`\n  padding: 10px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n`;\n\nconst ProfileImg = styled.img`\n  width: 36px;\n  height: 36px;\n`;\n\nconst ProfileWrap = styled.div`\n  margin-left: 5px;\n  padding-top: 4px;\n`;\n\nconst Nickname = styled.div`\n  font-size: 15px;\n  line-height: 18px;\n`;\n\nconst Occupation = styled.div`\n  font-size: 12px;\n  line-height: 14px;\n  color: #757575;\n`;\n\nconst Introduction = styled.p`\n  margin-top: 10px;\n  height: 54px;\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nconst ButtonWrap = styled.div``;\n\nconst Button = styled.button`\n  background: url(${(props) => (props.clicked ? emptyHeart : fillHeart)})\n    no-repeat -2px -2px/30px 30px;\n  width: 26px;\n  height: 26px;\n  vertical-align: top;\n`;\n\nconst Comment = styled.span`\n  display: inline-block;\n  background: url(${commentImg}) no-repeat 4px 5px/17px 17px;\n  width: 26px;\n  height: 26px;\n  vertical-align: top;\n`;\n\nconst Card = () => {\n  return (\n    <Container>\n      <ImgWrap>\n        <Img src={sampleDesk} />\n      </ImgWrap>\n      <CardInfo>\n        <Header>\n          <ProfileImg src={basicProfile} />\n          <ProfileWrap>\n            <Nickname>닉네임</Nickname>\n            <Occupation>developer</Occupation>\n          </ProfileWrap>\n        </Header>\n        <Introduction>여기에 유저가 작성한 글이 들어갑니다.</Introduction>\n        <ButtonWrap>\n          <Button clicked={true} />\n          <Comment />\n        </ButtonWrap>\n      </CardInfo>\n    </Container>\n  );\n};\n\nexport default Card;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/profileAfterLogin.js",["190","191","192","193"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport basicProfile from \"../img/basic_profile.png\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"./dropdown.css\";\nimport { useCookies } from \"react-cookie\";\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst Button = styled.button`\n  vertical-align: top;\n  display: inline-block;\n`;\n\nconst Nickname = styled.span`\n  font-size: 16px;\n  vertical-align: middle;\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: inline-block;\n    margin-right: 10px;\n  }\n`;\n\nconst ImgWrap = styled.div`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  vertical-align: middle;\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  vertical-align: top;\n`;\n\nconst Item = styled.div`\n  font-size: 14px;\n  text-align: center;\n\n  &:hover {\n    background-color: #77c4a3;\n  }\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  display: block;\n`;\n\nconst LogoutButton = styled.button`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  display: block;\n`;\n\nconst ProfileAfterLogin = ({ nickname, profileImg }) => {\n  const [userCookies, setUserCookie, removeUserCookie] = useCookies([\n    \"userToken\",\n  ]);\n  const handleLogout = () => {\n    removeUserCookie(\"userToken\");\n    window.location.reload(false);\n  };\n  return (\n    <Container>\n      <Dropdown>\n        <Dropdown.Toggle id=\"dropdown\">\n          <Nickname>{nickname}</Nickname>\n          <ImgWrap>\n            <Img src={profileImg === \"\" ? basicProfile : profileImg} />\n          </ImgWrap>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"menu\">\n          <Dropdown.Item>\n            <Item>\n              <SLink to=\"/mypage\">마이페이지</SLink>\n            </Item>\n          </Dropdown.Item>\n          <Dropdown.Item>\n            <Item>\n              <SLink to=\"/upload\">업로드</SLink>\n            </Item>\n          </Dropdown.Item>\n          <Dropdown.Item>\n            <Item>\n              <LogoutButton onClick={handleLogout}>로그아웃</LogoutButton>\n            </Item>\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Container>\n  );\n};\n\nexport default ProfileAfterLogin;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/login.js",["194"],"import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { userApi } from \"../api\";\nimport Header from \"../components/header\";\nimport Loader from \"../components/loader\";\n\nconst Container = styled.div`\n  max-width: 360px;\n  padding: 50px 30px 40px;\n  margin: 0 auto;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  font-size: 15px;\n  color: #424242;\n  border: 1px solid #dadada;\n  border-radius: 5px;\n  padding: 0 15px;\n  box-sizing: border-box;\n\n  &:not(:first-child) {\n    margin-top: 5px;\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n  width: 100%;\n  height: 50px;\n  margin: 20px 0;\n  background-color: #77c4a3;\n  color: #ffffff;\n  font-size: 17px;\n  line-height: 22px;\n  border-radius: 4px;\n`;\n\nconst Wrap = styled.div`\n  margin: 20px 0;\n  line-height: 19px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst SLink = styled(Link)`\n  display: inline-block;\n  padding: 3px 5px;\n  color: #424242;\n  font-size: 15px;\n`;\n\nconst Login = ({ history }) => {\n  const [userId, setUserId] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userCookies, setUserCookie] = useCookies([\"userToken\"]);\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    try {\n      const {\n        data: { access_token },\n        status,\n      } = await userApi.signIn(userId, userPassword);\n\n      if (status === 201) {\n        setUserCookie(\"userToken\", access_token, { path: \"/\" });\n        alert(\"로그인 성공😊\u001d\");\n        history.push(\"/\");\n      }\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"아이디와 비밀번호를 다시 확인해주세요😅\");\n        setUserPassword(\"\");\n      } else if (error.response.status === 404) {\n        console.log(\"Error\", error.response.data.message);\n      } else {\n        console.log(error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      <Header />\n      <Container>\n        {loading && <Loader />}\n        <Form onSubmit={onSubmit}>\n          <Input\n            type=\"text\"\n            placeholder=\"아이디\"\n            autoFocus=\"autofocus\"\n            value={userId}\n            onChange={(e) => setUserId(e.currentTarget.value)}\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            value={userPassword}\n            onChange={(e) => setUserPassword(e.currentTarget.value)}\n          />\n          <Button onClick={onSubmit}>로그인</Button>\n        </Form>\n        <Wrap>\n          <SLink to=\"/\">아이디/비밀번호 찾기</SLink>\n          <SLink to=\"/signup\">회원가입</SLink>\n        </Wrap>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/signUp.js",["195"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport InputSns from \"../components/inputSns\";\nimport SelectDomain from \"../components/emailDomain/selectDomain\";\nimport DirectDomain from \"../components/emailDomain/directDomain\";\nimport plusIcon from \"../img/plus.png\";\nimport Header from \"../components/header\";\n\nconst Container = styled.div`\n  padding: 50px 30px;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst Form = styled.form``;\n\nconst InputWrap = styled.div`\n  margin-top: 30px;\n  position: relative;\n`;\n\nconst EmailWrap = styled.div`\n  display: flex;\n`;\n\nconst AtSign = styled.span`\n  color: #8e8e8e;\n  display: inline-block;\n  width: 26px;\n  padding: 10px 6px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;\n\nconst InputInfo = styled.div`\n  font-size: 12px;\n  color: #8e8e8e;\n  margin-bottom: 6px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px 6px;\n  border: 1px solid #bfbfbf;\n  box-sizing: border-box;\n  border-radius: 5px;\n  margin-left: -1px;\n  ${(props) => (props.flex ? \"flex:1\" : null)};\n`;\n\nconst AddSnsButton = styled.button`\n  position: absolute;\n  top: -8px;\n  left: 26px;\n  background: url(${plusIcon}) no-repeat 9px 9px/ 12px 12px;\n  padding: 15px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  background-color: #77c4a3;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  padding: 15px 0;\n  border-radius: 5px;\n  margin-top: 40px;\n`;\n\nconst SignUp = () => {\n  return (\n    <>\n      <Header />\n      <Container>\n        <Title>회원가입</Title>\n        <Form>\n          <InputWrap>\n            <Label htmlFor=\"user_id\">아이디 (필수)</Label>\n            <InputInfo>8자 이상 입력해주세요.</InputInfo>\n            <Input\n              type=\"text\"\n              id=\"user_id\"\n              placeholder=\"아이디\"\n              minLength=\"8\"\n              required\n            />\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_password\">비밀번호 (필수)</Label>\n            <InputInfo>8자 이상 입력해주세요.</InputInfo>\n            <Input\n              type=\"password\"\n              id=\"user_password\"\n              placeholder=\"비밀번호\"\n              minLength=\"8\"\n              required\n            />\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_checkPassword\">비밀번호 확인\u001c(필수)</Label>\n            <Input\n              type=\"password\"\n              id=\"user_checkPassword\"\n              placeholder=\"비밀번호 확인\"\n              minLength=\"8\"\n              required\n            />\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_nickname\">닉네임\u001c(필수)</Label>\n            <Input\n              type=\"text\"\n              id=\"user_nickname\"\n              placeholder=\"닉네임\"\n              required\n            />\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_email\">이메일</Label>\n            <EmailWrap>\n              <Input\n                type=\"text\"\n                id=\"user_email\"\n                placeholder=\"이메일\"\n                flex={true}\n              />\n              <AtSign>@</AtSign>\n              <SelectDomain />\n              {/* <DirectDomain /> */}\n            </EmailWrap>\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_job\">직업</Label>\n            <Input type=\"text\" id=\"user_job\" placeholder=\"직업\" />\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_location\">지역</Label>\n            <Input type=\"text\" id=\"user_location\" placeholder=\"지역\" />\n          </InputWrap>\n          <InputWrap>\n            <Label htmlFor=\"user_sns\">SNS</Label>\n            <AddSnsButton />\n            <InputSns />\n          </InputWrap>\n          <SubmitButton>회원가입</SubmitButton>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default SignUp;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/inputSns.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/emailDomain/selectDomain.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/emailDomain/directDomain.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myPage.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/profileCard.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/myProfileTab.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/squareImg.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/mySetting/mySetting.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myProfile/myProfile.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myProfile/viewMyLikes.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/myProfile/viewMyUploads.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/mySetting/settingProfile.js",["196"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport plusIcon from \"../../../img/plus.png\";\nimport basicProfile from \"../../../img/basic_profile.png\";\nimport SelectDomain from \"../../../components/emailDomain/selectDomain\";\nimport DirectDomain from \"../../../components/emailDomain/directDomain\";\nimport InputSns from \"../../../components/inputSns\";\n\nconst Container = styled.div`\n  padding: 40px 30px;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst Form = styled.form``;\n\nconst SetImgWrap = styled.div`\n  margin-top: 40px;\n`;\n\nconst ImgWrap = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  display: block;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n`;\n\nconst ImgLabel = styled.label`\n  cursor: pointer;\n  margin: 15px auto 0;\n  display: block;\n  width: 150px;\n  text-align: center;\n  color: #77c4a3;\n  font-size: 15px;\n`;\n\nconst InputFile = styled.input`\n  overflow: hidden;\n  position: absolute;\n  clip: rect(0 0 0 0);\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n`;\n\nconst InputWrap = styled.div`\n  margin-top: 40px;\n  display: flex;\n  position: relative;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px 6px;\n  border: 1px solid #bfbfbf;\n  box-sizing: border-box;\n  border-radius: 5px;\n  margin-left: -1px;\n  ${(props) => (props.flex ? \"flex:1\" : null)};\n`;\n\nconst Label = styled.label`\n  font-size: 14px;\n  width: 100px;\n  display: inline-block;\n  line-height: 37px;\n`;\n\nconst EmailWrap = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst AtSign = styled.span`\n  color: #8e8e8e;\n  display: inline-block;\n  width: 26px;\n  padding: 10px 6px;\n`;\n\nconst AddSnsButton = styled.button`\n  position: absolute;\n  top: 3px;\n  left: 26px;\n  background: url(${plusIcon}) no-repeat 9px 9px/ 12px 12px;\n  padding: 15px;\n`;\n\nconst Textarea = styled.textarea`\n  resize: none;\n  min-height: 100px;\n  width: 100%;\n  padding: 10px 6px;\n  border: 1px solid #bfbfbf;\n  box-sizing: border-box;\n  border-radius: 5px;\n  margin-left: -1px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  background-color: #77c4a3;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  padding: 15px 0;\n  border-radius: 5px;\n  margin-top: 40px;\n`;\n\nconst SnsWrap = styled.div`\n  width: 100%;\n`;\n\nconst REGISTERED_DOMAINS = [\n  \"naver.com\",\n  \"gmail.com\",\n  \"hanmail.net\",\n  \"daum.net\",\n  \"nate.com\",\n];\n\nconst SettingProfile = ({ myProfile }) => {\n  const {\n    profileImg,\n    nickname,\n    email,\n    job,\n    location,\n    introduction,\n    snsBundle,\n  } = myProfile;\n\n  const userEmail = email.split(\"@\");\n  const [userImg, setUserImg] = useState(profileImg);\n  const [userNickname, setUserNickname] = useState(nickname);\n  const [userEmailId, setUserEmailId] = useState(userEmail[0]);\n  const [userEmailDomain, setUserEmailDomain] = useState(userEmail[1]);\n  const [userJob, setUserJob] = useState(job);\n  const [userLocation, setUserLocation] = useState(location);\n  const [userIntroduction, setUserIntroduction] = useState(introduction);\n  const [userSns, setUserSns] = useState(snsBundle);\n\n  const [isDirect, setIsDirect] = useState(() => {\n    if (!REGISTERED_DOMAINS.includes(userEmailDomain)) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  const addSnsClick = (e) => {\n    e.preventDefault();\n    if (userSns.length >= 3) return;\n    else {\n      setUserSns([...userSns, \"\"]);\n    }\n  };\n\n  const removeSnsClick = (e, index) => {\n    e.preventDefault();\n    if (userSns.length <= 0) return;\n    else {\n      setUserSns(userSns.filter((item, idx) => idx !== index));\n    }\n  };\n\n  const updateSns = (e, index) => {\n    setUserSns(\n      userSns.map((item, idx) => (idx === index ? e.target.value : item))\n    );\n  };\n  console.log(userSns);\n  return (\n    <Container>\n      <Title>회원정보 수정</Title>\n      <Form>\n        <SetImgWrap>\n          <ImgWrap>\n            <Img src={userImg === \"\" ? basicProfile : userImg} />\n          </ImgWrap>\n          <ImgLabel htmlFor=\"user_profileImg\">프로필 이미지 변경</ImgLabel>\n          <InputFile type=\"file\" id=\"user_profileImg\" accept=\".jpg, .png\" />\n        </SetImgWrap>\n        <InputWrap>\n          <Label htmlFor=\"user_nickname\">닉네임\u001c*</Label>\n          <Input\n            type=\"text\"\n            id=\"user_nickname\"\n            placeholder=\"닉네임\"\n            value={userNickname}\n            onChange={(e) => setUserNickname(e.currentTarget.value)}\n            required\n          />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"user_email\">이메일</Label>\n          <EmailWrap>\n            <Input\n              type=\"text\"\n              id=\"user_email\"\n              placeholder=\"이메일\"\n              flex={true}\n              value={userEmailId}\n              onChange={(e) => setUserEmailId(e.currentTarget.value)}\n            />\n            <AtSign>@</AtSign>\n            {isDirect ? (\n              <DirectDomain\n                isDirect={isDirect}\n                setIsDirect={setIsDirect}\n                userEmailDomain={userEmailDomain}\n                setUserEmailDomain={setUserEmailDomain}\n              />\n            ) : (\n              <SelectDomain\n                isDirect={isDirect}\n                setIsDirect={setIsDirect}\n                userEmailDomain={userEmailDomain}\n                setUserEmailDomain={setUserEmailDomain}\n              />\n            )}\n          </EmailWrap>\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"user_job\">직업</Label>\n          <Input\n            type=\"text\"\n            id=\"user_job\"\n            value={userJob}\n            placeholder=\"직업\"\n            onChange={(e) => setUserJob(e.currentTarget.value)}\n          />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"user_location\">지역</Label>\n          <Input\n            type=\"text\"\n            id=\"user_location\"\n            value={userLocation}\n            placeholder=\"지역\"\n            onChange={(e) => setUserLocation(e.currentTarget.value)}\n          />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"user_introduction\">소개</Label>\n          <Textarea\n            value={userIntroduction}\n            onChange={(e) => setUserIntroduction(e.currentTarget.value)}\n          />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"user_sns\">SNS</Label>\n          <AddSnsButton onClick={addSnsClick} />\n          <SnsWrap>\n            {userSns.map((item, idx) => (\n              <InputSns\n                key={idx}\n                sns={item}\n                updateSns={(e) => updateSns(e, idx)}\n                removeSnsClick={(e) => removeSnsClick(e, idx)}\n              />\n            ))}\n          </SnsWrap>\n        </InputWrap>\n        <SubmitButton>회원정보수정</SubmitButton>\n      </Form>\n    </Container>\n  );\n};\n\nexport default SettingProfile;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/myPage/mySetting/changePassword.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/contentDetail.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/slider/sliders.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/slider/slideItem.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/pages/upload.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/uploadedItem.js",["197"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport sampleDesk from \"../../img/sample_desk.jpeg\";\n\nconst Img = styled.img`\n  width: 80px;\n  height: 80px;\n  border-radius: 10px;\n  border: 1px solid #e8e8e8;\n  box-sizing: border-box;\n  vertical-align: top;\n\n  @media screen and (min-width: 768px) {\n    width: 120px;\n    height: 120px;\n  }\n\n  &:not(:first-child) {\n    margin-left: 5px;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 10px;\n    }\n  }\n`;\n\nconst UploadedItem = ({ image }) => {\n  return <Img src={image} />;\n};\n\nexport default UploadedItem;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/uploadInput.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/imgCrop/cropDialog.js",["198"],"import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ImgCropper from \"./imgCropper\";\nimport getCroppedImg from \"./cropImg\";\n\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nconst ModalContainer = styled.div`\n  box-sizing: border-box;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: 0;\n`;\n\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #ffffff;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 70px 20px 50px;\n  max-width: 600px;\n  height: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 80%;\n    max-width: 800px;\n    border-radius: 10px;\n    height: 80%;\n    padding: 80px 20px 50px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  line-height: 40px;\n  text-align: center;\n  color: #fff;\n  background-color: #77c4a3;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 10px 10px 0 0;\n    height: 50px;\n    line-height: 50px;\n  }\n`;\n\nconst ImgWrap = styled.div`\n  max-width: 100%;\n  max-height: 100%;\n  height: 50vh;\n  position: relative;\n`;\n\nconst Button = styled.button`\n  border: 1px solid #77c4a3;\n  border-radius: 5px;\n  padding: 5px 10px;\n  background-color: ${(props) => (props.color ? props.color : \"#fff\")};\n  color: ${(props) => (props.color ? \"#fff\" : \"#77c4a3\")};\n  &:not(:first-child) {\n    margin-left: 5px;\n  }\n`;\n\nconst ButtonWrap = styled.div`\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst CropDialog = ({\n  image,\n  visible,\n  setImage,\n  setVisible,\n  images,\n  setImages,\n  handleInputReset,\n}) => {\n  const [rotation, setRotation] = useState(0);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const getCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(\n        image.url,\n        croppedAreaPixels,\n        rotation\n      );\n\n      let file = new File([croppedImage], image.name);\n      setImages([...images, file]);\n      handleCancel();\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n\n  const handleCancel = () => {\n    setImage({ url: null, name: null });\n    setVisible(false);\n    handleInputReset();\n  };\n\n  return (\n    <>\n      <ModalOverlay visible={visible} />\n      <ModalContainer tabIndex=\"-1\" visible={visible}>\n        <ModalInner tabIndex=\"0\">\n          <Title>이미지 편집</Title>\n          <ImgWrap>\n            <ImgCropper\n              image={image}\n              rotation={rotation}\n              onCropComplete={onCropComplete}\n              setRotation={setRotation}\n            />\n          </ImgWrap>\n          <ButtonWrap>\n            <Button onClick={handleCancel}>취소</Button>\n            <Button color=\"#77c4a3\" onClick={getCroppedImage}>\n              등록\n            </Button>\n          </ButtonWrap>\n        </ModalInner>\n      </ModalContainer>\n    </>\n  );\n};\n\nexport default CropDialog;\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/imgCrop/imgCropper.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/uploadContents/imgCrop/cropImg.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/comment/writingComment.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/comment/commentItem.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/comment/commentList.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/components/loader.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/api.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/hooks/useGetMyProfile.js",["199"],"import { useEffect, useState } from \"react\";\nimport { userApi } from \"../api\";\n\nexport function useGetMyProfile(accessToken) {\n  const [myProfile, setMyProfile] = useState({});\n  const getProfile = async () => {\n    try {\n      const { data, status } = await userApi.getMyProfile(accessToken);\n\n      if (status === 200) {\n        setMyProfile(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  return { myProfile };\n}\n","/Users/hongsungyeun/Documents/gitlab/test_web/src/hooks/useGetToken.js",[],"/Users/hongsungyeun/Documents/gitlab/test_web/src/hooks/useLogin.js",["200"],"import { useEffect, useState } from \"react\";\nimport { userApi } from \"../api\";\n\nexport function useLogin(accessToken) {\n  const [isLogin, setIsLogin] = useState(false);\n\n  const loginValidation = async (accessToken) => {\n    try {\n      const { status } = await userApi.tokenValidation(accessToken);\n      if (status === 200) {\n        setIsLogin(true);\n      } else {\n        setIsLogin(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (accessToken) {\n      loginValidation(accessToken);\n    }\n  }, []);\n\n  return { isLogin };\n}\n",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":10,"column":1,"nodeType":"207","endLine":19,"endColumn":3},{"ruleId":"205","severity":1,"message":"206","line":15,"column":1,"nodeType":"207","endLine":29,"endColumn":3},{"ruleId":"208","severity":1,"message":"209","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":21},{"ruleId":"208","severity":1,"message":"213","line":7,"column":10,"nodeType":"210","messageId":"211","endLine":7,"endColumn":18},{"ruleId":"208","severity":1,"message":"214","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"216","line":13,"column":7,"nodeType":"210","messageId":"211","endLine":13,"endColumn":13},{"ruleId":"208","severity":1,"message":"217","line":72,"column":10,"nodeType":"210","messageId":"211","endLine":72,"endColumn":21},{"ruleId":"208","severity":1,"message":"218","line":72,"column":23,"nodeType":"210","messageId":"211","endLine":72,"endColumn":36},{"ruleId":"208","severity":1,"message":"217","line":62,"column":10,"nodeType":"210","messageId":"211","endLine":62,"endColumn":21},{"ruleId":"208","severity":1,"message":"219","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":20},{"ruleId":"208","severity":1,"message":"220","line":147,"column":19,"nodeType":"210","messageId":"211","endLine":147,"endColumn":29},{"ruleId":"208","severity":1,"message":"221","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":124,"column":6,"nodeType":"224","endLine":124,"endColumn":35,"suggestions":"225"},{"ruleId":"222","severity":1,"message":"226","line":20,"column":6,"nodeType":"224","endLine":20,"endColumn":8,"suggestions":"227"},{"ruleId":"222","severity":1,"message":"228","line":24,"column":6,"nodeType":"224","endLine":24,"endColumn":8,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useGetMyProfile' is defined but never used.","Identifier","unusedVar","'useGetToken' is defined but never used.","'useLogin' is defined but never used.","'sampleDesk2' is defined but never used.","'useState' is defined but never used.","'Button' is assigned a value but never used.","'userCookies' is assigned a value but never used.","'setUserCookie' is assigned a value but never used.","'DirectDomain' is defined but never used.","'setUserImg' is assigned a value but never used.","'sampleDesk' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'handleCancel', 'image.name', 'image.url', 'images', and 'setImages'. Either include them or remove the dependency array. If 'setImages' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["232"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [croppedAreaPixels, handleCancel, image.name, image.url, images, rotation, setImages]",{"range":"241","text":"242"},"Update the dependencies array to be: [getProfile]",{"range":"243","text":"244"},"Update the dependencies array to be: [accessToken]",{"range":"245","text":"246"},[2608,2637],"[croppedAreaPixels, handleCancel, image.name, image.url, images, rotation, setImages]",[462,464],"[getProfile]",[554,556],"[accessToken]"]